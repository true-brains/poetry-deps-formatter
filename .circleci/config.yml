version: 2.1

workflows:
  version: 2
  tests:
    jobs:
      - test-37
      - test-38
      - combine_coverage_reports:
          requires:
            - test-37
            - test-38

  build_and_deploy_docs:
    jobs:
      - docs:
          filters:
            branches:
              only:
                - master
jobs:
  test-37: &test-template
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-3-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pyproject.toml" }}
      - run:
          command: |
            poetry config virtualenvs.in-project true
            poetry install
            mkdir -p .coverage .test-reports
      - run:
          command: |
            poetry run pytest --cov=poetry-deps-formatter --junit-xml=junit.xml -v -m "not benchmark"
      - store_test_results:
          path: .test-reports
      - save_cache:
          key: deps-2-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pyproject.toml" }}
          paths:
            - ".venv"

  test-38:
    <<: *test-template
    docker:
      - image: circleci/python:3.8.1

  docs:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-3-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pyproject.toml" }}
      - run:
          command: poetry install
      - run:
          name: Push to PyPI
          command: |
            poetry publish --build --username "${PYPI_USERNAME}" --password "${PYPI_PASSWORD}" --no-interaction
      - save_cache:
          key: deps-2-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pyproject.toml" }}
          paths:
            - ".venv"
